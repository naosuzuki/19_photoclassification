%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.79.0 (http://poppler.freedesktop.org)
%%Creator: matplotlib 2.1.0, http://matplotlib.org
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 432 360
%%HiResBoundingBox: 0 0 432 360
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font T3_15_0
8 dict begin
/FontType 3 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox [-1021 -463 1794 1233] def
/Encoding 256 array def
  0 1 255 { Encoding exch /.notdef put } for
/BuildGlyph {
  exch /CharProcs get exch
  2 copy known not { pop /.notdef } if
  get exec
} bind def
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
/CharProcs 40 dict def
CharProcs begin
/A {
684 0 8 0 676 729 setcachedevice
q
342 632 m
208 269 l
476 269 l
342 632 l
286 729 m
398 729 l
676 0 l
573 0 l
507 187 l
178 187 l
112 0 l
8 0 l
286 729 l
f
Q
} def
/C {
698 0 56 -13 644 742 setcachedevice
q
644 673 m
644 569 l
610 599 575 622 537 638 c
499 653 460 661 418 661 c
334 661 270 635 226 584 c
182 533 160 460 160 364 c
160 268 182 194 226 143 c
270 92 334 67 418 67 c
460 67 499 74 537 90 c
575 105 610 128 644 159 c
644 56 l
609 32 572 15 534 4 c
496 -7 455 -13 412 -13 c
302 -13 215 20 151 87 c
87 154 56 246 56 364 c
56 481 87 573 151 641 c
215 708 302 742 412 742 c
456 742 497 736 535 725 c
573 713 610 696 644 673 c
f
Q
} def
/I {
295 0 98 0 197 729 setcachedevice
q
98 0 99 729 re
f
Q
} def
/N {
748 0 98 0 650 729 setcachedevice
q
98 729 m
231 729 l
554 119 l
554 729 l
650 729 l
650 0 l
517 0 l
194 610 l
194 0 l
98 0 l
98 729 l
f
Q
} def
/P {
603 0 98 0 569 729 setcachedevice
q
197 648 m
197 374 l
321 374 l
367 374 402 385 427 409 c
452 433 465 467 465 511 c
465 555 452 588 427 612 c
402 636 367 648 321 648 c
197 648 l
98 729 m
321 729 l
402 729 464 710 506 673 c
548 636 569 582 569 511 c
569 439 548 384 506 348 c
464 311 402 293 321 293 c
197 293 l
197 0 l
98 0 l
98 729 l
f
Q
} def
/T {
611 0 -2 0 614 729 setcachedevice
q
-2 729 m
614 729 l
614 646 l
355 646 l
355 0 l
256 0 l
256 646 l
-2 646 l
-2 729 l
f
Q
} def
/a {
613 0 60 -13 522 560 setcachedevice
q
343 275 m
270 275 220 266 192 250 c
164 233 150 205 150 165 c
150 133 160 107 181 89 c
202 70 231 61 267 61 c
317 61 357 78 387 114 c
417 149 432 196 432 255 c
432 275 l
343 275 l
522 312 m
522 0 l
432 0 l
432 83 l
411 49 385 25 355 10 c
325 -5 287 -13 243 -13 c
187 -13 142 2 109 33 c
76 64 60 106 60 159 c
60 220 80 266 122 298 c
163 329 224 345 306 345 c
432 345 l
432 354 l
432 395 418 427 391 450 c
364 472 326 484 277 484 c
245 484 215 480 185 472 c
155 464 127 453 100 439 c
100 522 l
132 534 164 544 195 550 c
226 556 256 560 286 560 c
365 560 424 539 463 498 c
502 457 522 395 522 312 c
f
Q
} def
/b {
635 0 91 -13 580 760 setcachedevice
q
487 273 m
487 339 473 390 446 428 c
418 466 381 485 334 485 c
286 485 249 466 222 428 c
194 390 181 339 181 273 c
181 207 194 155 222 117 c
249 79 286 61 334 61 c
381 61 418 79 446 117 c
473 155 487 207 487 273 c
181 464 m
199 496 223 520 252 536 c
281 552 316 560 356 560 c
422 560 476 533 518 481 c
559 428 580 359 580 273 c
580 187 559 117 518 65 c
476 13 422 -13 356 -13 c
316 -13 281 -5 252 10 c
223 25 199 49 181 82 c
181 0 l
91 0 l
91 760 l
181 760 l
181 464 l
f
Q
} def
/c {
550 0 55 -13 488 560 setcachedevice
q
488 526 m
488 442 l
462 456 437 466 411 473 c
385 480 360 484 334 484 c
276 484 230 465 198 428 c
166 391 150 339 150 273 c
150 206 166 154 198 117 c
230 80 276 62 334 62 c
360 62 385 65 411 72 c
437 79 462 90 488 104 c
488 21 l
462 9 436 0 410 -5 c
383 -10 354 -13 324 -13 c
242 -13 176 12 128 64 c
79 115 55 185 55 273 c
55 362 79 432 128 483 c
177 534 244 560 330 560 c
358 560 385 557 411 551 c
437 545 463 537 488 526 c
f
Q
} def
/colon {
337 0 117 0 220 517 setcachedevice
q
117 124 m
220 124 l
220 0 l
117 0 l
117 124 l
117 517 m
220 517 l
220 393 l
117 393 l
117 517 l
f
Q
} def
/comma {
318 0 77 -115 220 124 setcachedevice
q
117 124 m
220 124 l
220 40 l
140 -115 l
77 -115 l
117 40 l
117 124 l
f
Q
} def
/d {
635 0 55 -13 544 760 setcachedevice
q
454 464 m
454 760 l
544 760 l
544 0 l
454 0 l
454 82 l
435 49 411 25 382 10 c
353 -5 319 -13 279 -13 c
213 -13 159 13 117 65 c
75 117 55 187 55 273 c
55 359 75 428 117 481 c
159 533 213 560 279 560 c
319 560 353 552 382 536 c
411 520 435 496 454 464 c
148 273 m
148 207 161 155 188 117 c
215 79 253 61 301 61 c
348 61 385 79 413 117 c
440 155 454 207 454 273 c
454 339 440 390 413 428 c
385 466 348 485 301 485 c
253 485 215 466 188 428 c
161 390 148 339 148 273 c
f
Q
} def
/e {
615 0 55 -13 562 560 setcachedevice
q
562 296 m
562 252 l
149 252 l
153 190 171 142 205 110 c
238 78 284 62 344 62 c
378 62 412 66 444 74 c
476 82 509 95 541 113 c
541 28 l
509 14 476 3 442 -3 c
408 -9 373 -13 339 -13 c
251 -13 182 12 131 62 c
80 112 55 181 55 268 c
55 357 79 428 127 481 c
175 533 241 560 323 560 c
397 560 455 536 498 489 c
540 441 562 377 562 296 c
472 322 m
471 371 457 410 431 440 c
404 469 368 484 324 484 c
274 484 234 469 204 441 c
174 413 156 373 152 322 c
472 322 l
f
Q
} def
/eight {
636 0 68 -13 568 742 setcachedevice
q
318 346 m
271 346 234 333 207 308 c
180 283 167 249 167 205 c
167 161 180 126 207 101 c
234 76 271 64 318 64 c
364 64 401 76 428 102 c
455 127 469 161 469 205 c
469 249 455 283 429 308 c
402 333 365 346 318 346 c
219 388 m
177 398 144 418 120 447 c
96 476 85 511 85 553 c
85 611 105 657 147 691 c
188 725 245 742 318 742 c
390 742 447 725 489 691 c
530 657 551 611 551 553 c
551 511 539 476 515 447 c
491 418 459 398 417 388 c
464 377 501 355 528 323 c
554 291 568 251 568 205 c
568 134 546 80 503 43 c
459 5 398 -13 318 -13 c
237 -13 175 5 132 43 c
89 80 68 134 68 205 c
68 251 81 291 108 323 c
134 355 171 377 219 388 c
183 544 m
183 506 194 476 218 455 c
242 434 275 424 318 424 c
360 424 393 434 417 455 c
441 476 453 506 453 544 c
453 582 441 611 417 632 c
393 653 360 664 318 664 c
275 664 242 653 218 632 c
194 611 183 582 183 544 c
f
Q
} def
/f {
352 0 23 0 371 760 setcachedevice
q
371 760 m
371 685 l
285 685 l
253 685 230 678 218 665 c
205 652 199 629 199 595 c
199 547 l
347 547 l
347 477 l
199 477 l
199 0 l
109 0 l
109 477 l
23 477 l
23 547 l
109 547 l
109 585 l
109 645 123 690 151 718 c
179 746 224 760 286 760 c
371 760 l
f
Q
} def
/five {
636 0 77 -13 549 729 setcachedevice
q
108 729 m
495 729 l
495 646 l
198 646 l
198 467 l
212 472 227 476 241 478 c
255 480 270 482 284 482 c
365 482 429 459 477 415 c
525 370 549 310 549 234 c
549 155 524 94 475 51 c
426 8 357 -13 269 -13 c
238 -13 207 -10 175 -6 c
143 -1 111 6 77 17 c
77 116 l
106 100 136 88 168 80 c
199 72 232 69 267 69 c
323 69 368 83 401 113 c
433 143 450 183 450 234 c
450 284 433 324 401 354 c
368 384 323 399 267 399 c
241 399 214 396 188 390 c
162 384 135 375 108 363 c
108 729 l
f
Q
} def
/four {
636 0 49 0 580 729 setcachedevice
q
378 643 m
129 254 l
378 254 l
378 643 l
352 729 m
476 729 l
476 254 l
580 254 l
580 172 l
476 172 l
476 0 l
378 0 l
378 172 l
49 172 l
49 267 l
352 729 l
f
Q
} def
/i {
278 0 94 0 184 760 setcachedevice
q
94 547 m
184 547 l
184 0 l
94 0 l
94 547 l
94 760 m
184 760 l
184 646 l
94 646 l
94 760 l
f
Q
} def
/l {
278 0 94 0 184 760 setcachedevice
q
94 0 90 760 re
f
Q
} def
/m {
974 0 91 0 889 560 setcachedevice
q
520 442 m
542 482 569 511 600 531 c
631 550 668 560 711 560 c
767 560 811 540 842 500 c
873 460 889 403 889 330 c
889 0 l
799 0 l
799 327 l
799 379 789 418 771 444 c
752 469 724 482 686 482 c
639 482 602 466 575 435 c
548 404 535 362 535 309 c
535 0 l
445 0 l
445 327 l
445 379 435 418 417 444 c
398 469 369 482 331 482 c
285 482 248 466 221 435 c
194 404 181 362 181 309 c
181 0 l
91 0 l
91 547 l
181 547 l
181 462 l
201 495 226 520 255 536 c
283 552 317 560 357 560 c
397 560 430 550 458 530 c
486 510 506 480 520 442 c
f
Q
} def
/n {
634 0 91 0 549 560 setcachedevice
q
549 330 m
549 0 l
459 0 l
459 327 l
459 379 448 417 428 443 c
408 469 378 482 338 482 c
289 482 251 466 223 435 c
195 404 181 362 181 309 c
181 0 l
91 0 l
91 547 l
181 547 l
181 462 l
202 494 227 519 257 535 c
286 551 320 560 358 560 c
420 560 468 540 500 501 c
532 462 549 405 549 330 c
f
Q
} def
/nine {
636 0 63 -13 566 742 setcachedevice
q
110 15 m
110 105 l
134 93 159 84 185 78 c
210 72 235 69 260 69 c
324 69 374 90 408 134 c
442 178 462 244 468 334 c
448 306 424 284 396 269 c
367 254 335 247 300 247 c
226 247 168 269 126 313 c
84 357 63 417 63 494 c
63 568 85 628 129 674 c
173 719 232 742 306 742 c
390 742 455 709 499 645 c
543 580 566 486 566 364 c
566 248 538 157 484 89 c
429 21 356 -13 264 -13 c
239 -13 214 -10 189 -6 c
163 -2 137 5 110 15 c
306 324 m
350 324 385 339 411 369 c
437 399 450 441 450 494 c
450 546 437 588 411 618 c
385 648 350 664 306 664 c
262 664 227 648 201 618 c
175 588 162 546 162 494 c
162 441 175 399 201 369 c
227 339 262 324 306 324 c
f
Q
} def
/o {
612 0 55 -13 557 560 setcachedevice
q
306 484 m
258 484 220 465 192 427 c
164 389 150 338 150 273 c
150 207 163 156 191 118 c
219 80 257 62 306 62 c
354 62 392 80 420 118 c
448 156 462 207 462 273 c
462 337 448 389 420 427 c
392 465 354 484 306 484 c
306 560 m
384 560 445 534 490 484 c
534 433 557 363 557 273 c
557 183 534 113 490 63 c
445 12 384 -13 306 -13 c
227 -13 165 12 121 63 c
77 113 55 183 55 273 c
55 363 77 433 121 484 c
165 534 227 560 306 560 c
f
Q
} def
/one {
636 0 110 0 544 729 setcachedevice
q
124 83 m
285 83 l
285 639 l
110 604 l
110 694 l
284 729 l
383 729 l
383 83 l
544 83 l
544 0 l
124 0 l
124 83 l
f
Q
} def
/parenleft {
390 0 86 -131 310 759 setcachedevice
q
310 759 m
266 683 234 609 213 536 c
191 463 181 389 181 314 c
181 238 191 164 213 91 c
234 17 266 -56 310 -131 c
232 -131 l
183 -54 146 20 122 94 c
98 168 86 241 86 314 c
86 386 98 459 122 533 c
146 607 182 682 232 759 c
310 759 l
f
Q
} def
/parenright {
390 0 80 -131 304 759 setcachedevice
q
80 759 m
158 759 l
206 682 243 607 267 533 c
291 459 304 386 304 314 c
304 241 291 168 267 94 c
243 20 206 -54 158 -131 c
80 -131 l
123 -56 155 17 177 91 c
198 164 209 238 209 314 c
209 389 198 463 177 536 c
155 609 123 683 80 759 c
f
Q
} def
/period {
318 0 107 0 210 124 setcachedevice
q
107 0 103 124 re
f
Q
} def
/r {
411 0 91 0 411 560 setcachedevice
q
411 463 m
401 469 390 473 378 476 c
366 478 353 480 339 480 c
288 480 249 463 222 430 c
194 397 181 350 181 288 c
181 0 l
91 0 l
91 547 l
181 547 l
181 462 l
199 495 224 520 254 536 c
284 552 321 560 365 560 c
371 560 378 559 386 559 c
393 558 401 557 411 555 c
411 463 l
f
Q
} def
/s {
521 0 54 -13 472 560 setcachedevice
q
443 531 m
443 446 l
417 458 391 468 364 475 c
336 481 308 485 279 485 c
234 485 200 478 178 464 c
156 450 145 430 145 403 c
145 382 153 366 169 354 c
185 342 217 330 265 320 c
296 313 l
360 299 405 279 432 255 c
458 230 472 195 472 151 c
472 100 452 60 412 31 c
372 1 316 -13 246 -13 c
216 -13 186 -10 154 -5 c
122 0 89 8 54 20 c
54 113 l
87 95 120 82 152 74 c
184 65 216 61 248 61 c
290 61 323 68 346 82 c
368 96 380 117 380 144 c
380 168 371 187 355 200 c
339 213 303 226 247 238 c
216 245 l
160 257 119 275 95 299 c
70 323 58 356 58 399 c
58 450 76 490 112 518 c
148 546 200 560 268 560 c
301 560 332 557 362 552 c
391 547 418 540 443 531 c
f
Q
} def
/seven {
636 0 82 0 551 729 setcachedevice
q
82 729 m
551 729 l
551 687 l
286 0 l
183 0 l
432 646 l
82 646 l
82 729 l
f
Q
} def
/six {
636 0 70 -13 573 742 setcachedevice
q
330 404 m
286 404 251 388 225 358 c
199 328 186 286 186 234 c
186 181 199 139 225 109 c
251 79 286 64 330 64 c
374 64 409 79 435 109 c
461 139 474 181 474 234 c
474 286 461 328 435 358 c
409 388 374 404 330 404 c
526 713 m
526 623 l
501 635 476 644 451 650 c
425 656 400 659 376 659 c
310 659 260 637 226 593 c
192 549 172 482 168 394 c
187 422 211 444 240 459 c
269 474 301 482 336 482 c
409 482 467 459 509 415 c
551 371 573 310 573 234 c
573 159 550 99 506 54 c
462 9 403 -13 330 -13 c
246 -13 181 19 137 83 c
92 147 70 241 70 364 c
70 479 97 571 152 639 c
206 707 280 742 372 742 c
396 742 421 739 447 735 c
472 730 498 723 526 713 c
f
Q
} def
/space {
318 0 0 0 0 0 setcachedevice
q
Q
} def
/t {
392 0 27 0 368 702 setcachedevice
q
183 702 m
183 547 l
368 547 l
368 477 l
183 477 l
183 180 l
183 135 189 106 201 94 c
213 81 238 75 276 75 c
368 75 l
368 0 l
276 0 l
206 0 158 13 132 39 c
106 65 93 112 93 180 c
93 477 l
27 477 l
27 547 l
93 547 l
93 702 l
183 702 l
f
Q
} def
/three {
636 0 76 -13 556 742 setcachedevice
q
406 393 m
453 383 490 362 516 330 c
542 298 556 258 556 212 c
556 140 531 84 482 45 c
432 6 362 -13 271 -13 c
240 -13 208 -10 176 -4 c
144 1 110 10 76 22 c
76 117 l
103 101 133 89 166 81 c
198 73 232 69 268 69 c
330 69 377 81 409 105 c
441 129 458 165 458 212 c
458 254 443 288 413 312 c
383 336 341 349 287 349 c
202 349 l
202 430 l
291 430 l
339 430 376 439 402 459 c
428 478 441 506 441 543 c
441 580 427 609 401 629 c
374 649 336 659 287 659 c
260 659 231 656 200 650 c
169 644 135 635 98 623 c
98 711 l
135 721 170 729 203 734 c
235 739 266 742 296 742 c
370 742 429 725 473 691 c
517 657 539 611 539 553 c
539 513 527 479 504 451 c
481 423 448 403 406 393 c
f
Q
} def
/two {
636 0 73 0 536 742 setcachedevice
q
192 83 m
536 83 l
536 0 l
73 0 l
73 83 l
110 121 161 173 226 239 c
290 304 331 346 348 365 c
380 400 402 430 414 455 c
426 479 433 504 433 528 c
433 566 419 598 392 622 c
365 646 330 659 286 659 c
255 659 222 653 188 643 c
154 632 117 616 78 594 c
78 694 l
118 710 155 722 189 730 c
223 738 255 742 284 742 c
359 742 419 723 464 685 c
509 647 532 597 532 534 c
532 504 526 475 515 449 c
504 422 484 390 454 354 c
446 344 420 317 376 272 c
332 227 271 164 192 83 c
f
Q
} def
/u {
634 0 85 -13 543 560 setcachedevice
q
85 216 m
85 547 l
175 547 l
175 219 l
175 167 185 129 205 103 c
225 77 255 64 296 64 c
344 64 383 79 411 110 c
439 141 453 183 453 237 c
453 547 l
543 547 l
543 0 l
453 0 l
453 84 l
431 50 405 26 377 10 c
348 -5 315 -13 277 -13 c
214 -13 166 6 134 45 c
101 83 85 140 85 216 c
311 560 m
311 560 l
f
Q
} def
/x {
592 0 29 0 559 547 setcachedevice
q
549 547 m
351 281 l
559 0 l
453 0 l
294 215 l
135 0 l
29 0 l
241 286 l
47 547 l
153 547 l
298 352 l
443 547 l
549 547 l
f
Q
} def
/y {
592 0 30 -207 562 547 setcachedevice
q
322 -50 m
296 -114 271 -157 247 -177 c
223 -197 191 -207 151 -207 c
79 -207 l
79 -132 l
132 -132 l
156 -132 175 -126 189 -114 c
203 -102 218 -75 235 -31 c
251 9 l
30 547 l
125 547 l
296 119 l
467 547 l
562 547 l
322 -50 l
f
Q
} def
/z {
525 0 43 0 482 547 setcachedevice
q
55 547 m
482 547 l
482 465 l
144 72 l
482 72 l
482 0 l
43 0 l
43 82 l
381 475 l
55 475 l
55 547 l
f
Q
} def
/zero {
636 0 66 -13 570 742 setcachedevice
q
318 664 m
267 664 229 639 203 589 c
177 539 165 464 165 364 c
165 264 177 189 203 139 c
229 89 267 64 318 64 c
369 64 407 89 433 139 c
458 189 471 264 471 364 c
471 464 458 539 433 589 c
407 639 369 664 318 664 c
318 742 m
399 742 461 709 505 645 c
548 580 570 486 570 364 c
570 241 548 147 505 83 c
461 19 399 -13 318 -13 c
236 -13 173 19 130 83 c
87 147 66 241 66 364 c
66 486 87 580 130 645 c
173 709 236 742 318 742 c
f
Q
} def
end
currentdict end
/T3_15_0 exch definefont pop
%%EndResource
/F15_0 /T3_15_0 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /quoteleft/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/exclamdown/cent/sterling/fraction/yen/florin/section
  /currency/quotesingle/quotedblleft/guillemotleft/guilsinglleft/guilsinglright/fi/fl
  /.notdef/endash/dagger/daggerdbl/periodcentered/.notdef/paragraph/bullet
  /quotesinglbase/quotedblbase/quotedblright/guillemotright/ellipsis/perthousand/.notdef/questiondown
  /.notdef/grave/acute/circumflex/tilde/macron/breve/dotaccent
  /dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut/ogonek/caron
  /emdash/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/AE/.notdef/ordfeminine/.notdef/.notdef/.notdef/.notdef
  /Lslash/Oslash/OE/ordmasculine/.notdef/.notdef/.notdef/.notdef
  /.notdef/ae/.notdef/.notdef/.notdef/dotlessi/.notdef/.notdef
  /lslash/oslash/oe/germandbls/.notdef/.notdef/.notdef/.notdef]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 432 360 re
W
q
1 j
/DeviceGray {} cs
[1] sc
0 j
0 w
[] 0 d
/DeviceGray {} CS
[1] SC
/DeviceGray {} cs
[1] sc
0 0 432 360 re
f
/DeviceGray {} CS
[0] SC
94.396 61.4 243.208 243.208 re
f
q
94.396 61.4 243.208 243.208 re
W
1 j
1 w
[] 0 d
/DeviceGray {} CS
[0] SC
/DeviceRGB {} cs
[0 0 0] sc
q
[243.36 0 0 243.36 94.396 61.4] cm
/DeviceRGB setcolorspace
<<
  /ImageType 1
  /Width 338
  /Height 338
  /ImageMatrix [338 0 0 -338 0 338]
  /BitsPerComponent 8
  /Decode [0 1 0 1 0 1]
  /DataSource currentfile
    /ASCII85Decode filter
    /LZWDecode filter
>>
pdfIm
J-#oZ\.fP\"b]2#:hXAd)[hEh@M(SI<[AN=7H774jC17kO2kcD3>@cH-^%(Id[7Z&
pA^IQ-1`"Mc>>>,9kQ8-eFn/PS^;$!.Kp<A7ANd0<-hgsR89_[Bsg!U;PdBp<U3Y"
j^u,/Y?5TV3rPA`B!PS,;Yak+h(#p=DDqBWf'.ChhJUrG`U;i'Zs[hi4&-RqL;IBh
=I`tJ*K.tuEZ%!*=!O'S;K(1BjmtX)cf]Bg4VjAOVj-;L3k\S'0s9)Cp0/Q7_ela7
m<9M_eLO4idr5"d*[_&L_rL8u]?SY\REsa]\igOi=/jg9p3PPo^E^G7n8`n^ru[$<
^[:lE*j4\8g$eV3IGZ]5cgBoeIXJoFa7Js&\IYbEqEU+K#6R5q4;A"8O@*^^5OaU0
$,R7L,mp<L>TF8@ODHuf_pJlY&]<t"0akr3ZrIdYED$6C7'VDV&k6l"BcG(>bN0L0
O`Z!ea:[c=*Cg^CN?ZIW,aBUrE_F"daARtj.EF9=pEn&rA@3dXP0CNibKNYV.a4(r
bpuKoXMZ_dP5O,nc1>c1-Hu'4dlPeg]HoS`;s`O/c]eS25e9n<m6f7M9_@@APT:c1
;A<sm8((#3'gto@]erKY[&kcQdWH!^;,e2$2b[3d4]P5dFWFaceeKKB=4V9.=&d_8
]lb%?Q0i'g<jiHg>$#jcNFLQO%>S<DQ5,m#g")%KAD$S"X_PomKsbRJQBf(!c.8`1
CYX*M6#^*FrRGglQV6df?5GKZEjQX*m<.:[D=N%[GGXJPhH11nI:/De%=V^[.lDia
fG5?[TpSS$KOU<L/UZNec680O33FWej4Oo.Of3Ne9o\6OmR`ONq/0?%e2]]5RH@GN
?'XRj^3,f,\ZSl'As;(sU$"H`GG<kQrfs/@Ps18,kh;&ZW%hH[Xek=Hp8P1Z>3;`c
iHfCHZ0YFR]sI&Drme@tqTdp&CHH.i[-i9I/%=lW`ppY/S#6.rBcGX^_=&noqnR1K
:B+73S/2RRb5>Tm`,^6,"30pPLGOMPh!Zc>ns"nMdIVU<4j`j":I+=>SC_&eF^7L=
g%JI->MJe[%qFGhS`acCG<NuRZ?P.YHfOkgLP=jb1gc7'qAt-^WHk'WXdOKaO-/f)
ria#tbb"",nbZZH=n$e;^&dbOh^@+#I6We?Tma\ZhtMU:n)s@nRKr9ZT?I7MccQ1$
[4_NQ$jhFq/PA?B*<B>S#_A'e#r22]"lO[iJrjjV_:U%<+G:k"OB)iX83G*>'H)Tp
mLqq>9+0?^.>0CW(..4\%H4V>L/@:V.G/&=@JiE(&Fp^W<6#On`'T:e_BMD#HGj8l
;2I#%]#<fl'@7.cM/d8_.k%M9iETTEO`iH&pq[^*62cbIOu>ch]bViGBigG*29+kF
HQtXuIrX=+8(d0tA(5O\:hi59=SX,+m"(9ok!R5Br?:6,K8qIR8'+mG-.NutP>2`\
8Vo#H9E^iJ;N0,Iq+W656]@7m:0&db:FIN:Yq32<=u<cu.V4jRA?rXIauOSsAd#Ut
1A50<BnJ)$'XsI8Y%AiFO#,old!-3^?;4>h1+'rfLf5pD0,_)QB*@*=1NmM+l*WK`
4NO%VX]A1GdlZYZm$t5qGY[MN4iu4ET1Po,:YG%(-f"<@'Dd)Pq<pR^69h--/qZ!,
'0r4E%%st&0i7]tr@!pKTrgqFd0HpGkbTDTe97!+W^TMD%0r?OQ,h:P;bNc(/#H9j
MGjjZ9pm"QVad,F;qc-(.GZhW[/QEA8%VI[$H8pn(8a6`P>WK.7]KHH(f^?b[45Hb
WbMa=<ROTBWhj-I20u=R)T>bC6li@oY+!q1_->C]Cojf)[oZbYrG.[D+EbQ5f>WSG
/"@`ce_7j8MY1@iD1o/oouYj4j^DtZMeBI"a%sl)AaEoWZF1oU=W9/0V,a"beq2+L
6aLI-U/\MNY0rf_;.h(9Xg@`CE*E-/D(W`5@b08_ZE%,GXni:3QGS>[RtG^P<P>nU
<o_sCOItrHb+fb:k1s(UFD`99]%9"26`[&,?5;5-=&>PqMHP2lmGpb2Rd\*TeTrl;
m(<Sgpg3ja="fgZ^:1!=.4b"::+c@Y<odp(&`nR_4pJh?0*Pb='8,dd&Ad!h$=Q%K
KWrH2_`2!4@GEkunD5>+fS^;M4ACZP7O5rTT,$@U=b_JeG8D+:)<38^NUaG;`jkIW
A'B(VEX"bL=Sj:Q*/fpL2G)".0-fQ5Q'8Lc:Wcg1.V0$jPk)Ogb8Bkm%fu9gErKCh
)36La>f3!$->:WVV`&/"h3t[)D9b/V3G2U]Sb&FucIqMGB>"28F9[->=oUeO*=87@
IP0#M[mk&%)kutJOjY.D8*O;*V6m+ddFiFiC#$%mo]Dgqg4rR@4\_l_7]"WrT2fH^
&#$CcL"9GB=mI)BXnB-5f"1<TCX%"*Ff(VV3tG#$?%oPl-HFeD-Y@1SSVo@CXP-j]
C2Ful[.^r]gDb'HmG+><2?)RdgQ-;k9uXYe7d&T3Rs&I>Qa?C'n(q9hH>a8[]_B/5
`Z&u9D=./6p\+^G]FTO3:'HZe:@6kb-\cTS*Q#=A%H9K76uT4[^3IZmj'5rNnX_bI
GW-f(]T7^9?:DuH-R[X'99sQm?,ZPo/`o11R;e`Zc1q;[k?R&<o:C6A3EIZn>be$8
*fJDA2Z;dNe#%1MS^R@a:$N]kTC_KQc[*W3lTJUW@#gH!3sS:B?%9-Q*m)q.QYG_J
YI&Jue_>-M?0e'-XnQ/`h7KPRm+q-9pYO$Lqr`LYrPQ,>?JXT<-]%9H#JBign`0M]
On%7C_0KAijnne>o%f5Bq;3"Or)]T`hB0jb%k$W?2lZG]+3jZ>2=(1dZ1ZjMdJI9:
mCa=FpKN^/qN$!g^%]A<(h;7s?X`K<QcJngj4o%>GOrModJ=m(iHtU,omXs!nt.Sr
IG_U0r_GrYIm<LP0?a.h-e\@rC\</6fsAEeiVl'fn:+/0qEN$`s'M8pF\gfkDufq-
"T@[Vrm2)QYRpe1'$/Dis0).tYTX&6nGk6L!,s@gn1;E&%foKe")pC(Ch3Z%*<^=M
"L'-n0JNX5<<Y'Z!,t.)YX&I)AHhQt"HZC`Y]0*Y>6St%#EX?-n6ZGT@gGnCjH+Ee
d#eV'Pi_CY$*\a_d!k.3M$e3W$F#EG0UE)"D[UNkoIusHn=L+CUAb_+$BVG"d*Tmr
ZOLla%?S0IE5;s%isp%Hg(;F;nBVUVddV51&$Xq%d+mE\kmgPU&?uM[;"kPUoau06
q2k[inGa+U!nK(2'!VlYd)Q_q)\Z(.r"1:h;'?VBCD.:O'(J[";*,G2)&4gb'N%44
nNdpDW=\Sm(6MB"&QoigFVRam("$S.&UaEeCD_&0(p>"t0mOWKPmGcg)6nZ/n;eEK
D&RDirGe/A0m=Q(N>OC@)j-g!;2lL!_]3Q:)c<p]nZ_^A]cD+)*Nifj;5kOti8_)e
*AQk$nC8Q,fc0JVnM02J;?7gk0cq"p*>/Y-1%uhGoc\0r+7]RYdNHqX%j9:L+L&*o
Oqf(E0\pao+n>^[YjEX_-R;S>i6jD,ni%df"XF^F-*fY\P"-iS9,DVG,uSM'10Gpo
F!Iu%,a*R'XLTW4D^\M>bjos(dZ5^FJL5De.?GDqZA0dTTZkiJ.^G0Jd[)Dg[3Tdf
/$c&jnuX9;Y:N@7.l,?uck@qXV(H__/2H$4E-El([k/6Ta)]]_o"P<*h^jrb%Pm-!
o'#dfnL]pq+d2^T'+kfI!A:\oq%Eufo*Y\B%kj+[',)<=1GK]0+Y]*?)q-/jo.':Z
0/8YH#a72(o-3gJ5r+X,)H0-`o1Ksb4#Jg./TXuOo0VaV@5O0n%+A'3F+FeLEAb(D
/i-urZ]>hWIlVRbl4\q5o8;D2G<0f.g2iZA1ReO=TfA7H0@Qs^'>YP"Y<6m3iY/d`
o:jmDWB;uO0N6.WPHb(Nd6"\`#SYrVo@Y-?iBMD?f2LisoBO:Nf0FEHg[k;+1\hF.
"$Vqe1=Q[toCDn1'1-dO%MT^E'H69/#spHl)g!StoFV%E0gp+:"&q?MoJm#<.7?!p
pCp1d1gos_2b%md7<EB7&SFQ)FZhQq75T??oNOg"KgA[J7'qjWe:0n#f1,Cb8Zpf<
FH9$(]h)2&8'^p%Pd*LGV+B(u8MmPBmS?J4SOdUE96?q%N@@NMeN!3?9s\V/eDVs#
f1ZmYe^V]9oZ$.Fj%T+?op"c<o]YACh+okq:N[*h2!7^kktlL?/+jEK[*^G4!Dui!
-oD<,'cP@4+&d0=;O'Bh[51c;;cAr)<3Qa.F\u&CX]#s;;XN.:Q!l0X;cE>k<)m3f
'k:4n,?C(T-C%e9da_DVKa5#4<E5#L'nKHYhbl=e:R-i@nF9X=Dbh+;>-Hac'othl
Q!/=?k1,l(olT'@Z!;6X>#if_'s1^r_d&J5=Ok`%Zp@tTjS2a.?ElXtFl+P]_-V4$
?Idd\Q186>iDWbN@("NZ2.p>TruX-(?Sfl4Q6A(c'joFT?re:-(*d5Z@:GNM<#.&q
p'5(c771*;@<P@?ef/-6'4c8D+kAYao.skLANNp%AW^b>p2N^u<G-G[B%C`r[S(6g
I:dY$8[a%Y[1R(1Q!LhTBs5]np7UI^QY9;lB9o)1QD8.,a_I->=uNKup5N_Y[70f"
AeTH)p<`FIZYajtCt?cC<mt`epMH5:'_^F"ZScP7itQ[UDNSpW(@N'Jol,!4Dq=ef
QN;(_;f?jd038[%[iiOH"*/NcDH@c`2]m"gO`=GO#$2[_dlDJN7)J[[FKI]IpJD6`
1NdjuFOo7[QW%u<5BM)oE>Mu*oJ^qPFX*5UG*/nJQ[q78GBQiSGLq1JQ\0G,2gBP7
5M(s>[^CB^P4KKZG`omgpPec(V0<KQHFLQ62m[[o[sW'*Eqc\<2mIcfO*m;)E*(A5
dbB1O_X<cDI@%]snKWL,T`USHH>bfm(]bpaolF43IBd",2t'?4jahROJ(P-&3"^a$
YCCd7?$IBAp4n6%''Zn2K!;)((`qTP2h)AXK=E?)GXI#-Q\9TcbLfO,QrA.[>D/50
K@isK3+IUN\V>?!L%oKJ(j1O2o7r\iiV7hUp*GMsEueA@L6aQLpn9-=K8FGFLmX`%
fV=8prJ=XS.@@5dppH#3M2I\3rqMt@mDKtfg)h0^NL8=W\D`GBjc.pWN]??bGjUPO
nW.q`O1=kDf_LU("ct_NO;SLhGn6"I&Wq>ROgu-fq&,>5*KiD]*l7Ijfe&C*09\CV
PBf<T=[A7^6^.=7PdsAMq+$]19pJjYQ$HZ#\RCbkAX3((Q8rZFq/)HYCR9<dQ^Mu_
\O6GuQkJ)+R$i_s\WN9TQ'g6mR5pb)H(CBaTpg8!R^o8`fr:G9[@91eRi/o/H,#iZ
_45eiS@QP-q8o0Fc(-kuP*m\gq'DUmh4@d.SpB^p\ac8Zoq)!RT/l_=H%D=Y"ddpL
TK3IRH4?Q/&YXL]Tt1u4g)6U[H_$SVU:JgKqC/0X/Yb?eUO#(u>!\pp6_jKHUH/@H
g/4KR<M]ImV)hbUqH]sZ>GcZjU08e=qB;atD5UQWVg<ch\q-cJKpJ0#Umd:=HBG/;
PGn>CWOeLsqNn3Be#"$tVHTt!qQ6eZX/gQOX.$GZ\q?pWLTEPYXEr-m>1'F_e#`@0
WS42K)VqPWiN@LaY.E_tg?G0>^TVssYI_?LqY@?6rNJ=oXa:MZ>7n!,'sRQOYr`i$
HLJ.#o<N]4ZF_EggF9H)h6:*DYaYm(q`D/(4g[8^Z25QKq\uq)9sn2&[<ffu>;N]L
0t)F;[[Uj:]'m"q8%3h6\%?dlgNg:'gU5d?\@YnRqh_j&NO_,j[elW(gS)0iUUg8u
R(J'^40c:7[CZ7E]/fu'Hbm6s`OS(P]K=<0S#a,ie[g+\]fXu^H;2$+jh&.h]:83%
H[i^*ot9&T]R0OjH]Pkq"hkr_^&/>THeH.1lb=DW_0d9>>$8W\-,9@,^YCEXH?6nB
28Hj`_#-41qN8W7)oPu'`-b:t\GO/`<PlCM_YdQUiVg[,A],R$_q]+K]<0$L8]Q4$
a1P9a4CQ4AKucB5`S4>3*,3MWDol7H_*!.dS:AZYV91i3aF&uigp+r5Z_>%$bIj7d
r0PVhF38m(be2'Ar2Geu\'9<.c+L7)fiQAP`QT=`cFiD2]Zn\`dEarNcZnWtSDV[V
!RQ5QP5O^mI1aj)(!bbicb/qur>j<KdEnEfd(LsXr@--B'@E@.e%=5[>p7PM6e$KT
d[a+\h+uK='@Ybre\,,9q^L#8A^k!ue=/VO4`T!mFk'[?efA&FSUoDj%G&4Let%fO
goK%TF4ZtLfstVEh4`IaUY&_cfY*F$h6GW/CY<"(fq#b.gX4_\`S-m'g3T%=4g3UG
e_N5-g`>5*rScMdA)+c^gn!ifg+D,$p"b&jfcAu,?2rhFMr,QDhS'<F?2NSDq;H`D
i*HH@4rqf&&)c:ni4^e`4k\e#1Z=m?i]\OGrZC!'-fY+UjEtb'?;]aS<PG%fj??f0
rE&'oA`TFseXf_"IW=NJU#mD%j;rTSISJsRKBBj3jaM@9hN>/DJ*5[VkI`D1I\Gt3
V6[grk<>*p]*7GJSa0Umg&@o75)JVfh<Q,cm(TU*^:W][S*`6GllP!Kro'XoamB#i
m^_<DT%EEpe^qOqmJb)n\tSQKl0R:2gOAnc*tRgDfC.T7n/hV"rsS=g-1H3?nK0@Q
?:"+r+7ih;ninSphZ`TN'D-cCQp2V_T25,?RIhRKoq*]*^G5AQA'R;=ocH-d\X3!H
FnNH"p)dl?rt4t^L%cX&pO>F%T9#)kIJJA*c/4<Ms.T/DNV\-ee/t+R+.N-F62CPk
pmhrlT9K0nXnr(>q`HV1^SC\_j8<8brOpn^^U=%\>Q#Z.rEU$6T>UW`qu0sIs1UfB
!.nZ`"U'Cm@1[Z_)Arj9_VrlZKMEU(M++/$Ggp=c(lq/Hn_"&*74"&;jH>?VVCphN
^*V57I)]kVRnT^n=j5`F4e>I4F;a`YJO?20BbX0>*g]Hq;sDgND,-d(WE!VMB@H^b
>clUo(&J_la^ML-m+.XpY0Usm>HO4gQ,`'-]3Odu>K-%'ID"J+Qj`Tlbq,.=j]J$2
.hR][@r`F1Q9QaZb$sZOI+;F]REjsdg)UBY5GcbA[$lC9'*kYUC\=/+G/n='gMF><
?-_>MJ]m/b)."*YLV_tiptVGo/lSe"oCX+FG>"XYlZIOp:=WEm]^Kb9*T%BW`T?Z9
r-k-U,FQ^JHi;hDDpRD7q+H&tIc'>aqu8lW"8`)5l3#9'4V0F`"@6uh)[/OS@g`+M
DmV"j_XO?U$UZOG#7j's":5Z-nJjn/5>Z`+#fUb9>89TSA7"dn;5?2]`pp-M)b2Q_
:D67g/;#$8;?VaU`_h\Y(eJa9R3bG/1jL+aER_$<9%'N<K#l@k]-9o=jM<KC.?'rJ
bjol)1JLe9f.BWOKX!O3o:4ga9QS.k4\V'`q)u'*>m!"3F(G_F:sF+H78D?ClUOfn
Pl40L[&!^p;KLA!9i.)1&Pl?2D';bR[2g>e<:1JU<Dp51032*@NBp<?FT#oV<j,4j
>u_Wq9j^u-h-j@:Fqop:=R"@SAQIAnEFmhH*J%O#FoA:R;DpChA6UtR[nPJ`ID^#/
G(g<>h"J/)C>Ems]5:jJFlRC$G88;IhY/>cgg(_-eUCm"niM)&GErJd@&fLbKjQfN
m=r+&%Jtui(nMq5@/)')N+7*!K8&:;#!\5Y\>DoWAGE:YNal2Z=-lr**^b_FH'W3J
jOm:JSRiDY?^>@#p4GKi3[SR8k0[dbSEH>QQY^=QDPO.FFN0BBB\LIg(?o#bS$)#)
^8\)F>8GC,lT2bf[-_Y3^UJ"5L;9!hS#46<Ct&[:]kq!1f^NbTQNP$BBHHKPE;VX-
S+#-Eqo<W5-OIV,4I1!+E>uYGZ>mO43R:s#Y:7k>I3jNiFSs`H]CYsh+4ac3%nk=D
2=FJnF^;`)fCdt_>KCuYT7bg.4h$@)Ggs3Hhg&O=);oagJ"laa*iG(bGs1Vcjnh1G
L$<n)oc*2j59J&7qd2k(mH]64_=r<JVp4dYs-D"(rBJ'I6iJ0Gq=gBqlMVh=o1SQ3
"$`^qCZ"alJ$:bn^_d@\+Hq_70HL)-FC,+lr#:8Y2?CWR,7!*g'nhZX&ulch#@U:V
JaeO._Y?B1i3Y:nn<OeTaB8u2N%Tm)^mDr09b:b8&r.&7)oJV"&n1E*?BE_]7-KA0
,!7lCOVieifWc'Z]MXOUFpg_uXVbF;=c&8U1Co;P)Ie>GN"NKJ\S0;,,El#b;0k+?
@Jq.?'Q8QMc8*H7OW@sHGBOSh4ihk*+/DkU?;_7q8EgL+,W'g_nh*0ua)`LO,b'#+
;G#")8L:2IQrUG,8'/c3-`!!-P-U6P8U-RNV3IoQ&uo/."X,;UKXtp(dSn?`[4UKN
\7H<D=3P=c0;Y2SAs3R79LPp:-BuP=1G3H:Vk#XkI)BDl:0l+61H"<*j'P`&F%rR1
3%":`3YRBp9nr[/-KO>ke$<o<FgX<o,k+a=dXP%;.6XUDl>JKHK28KD5U]V'@PeRB
:dr,bkN*@m;uVMKH#lA%FW3TQ;M7p3ZUQ?K(.2&ALXL:^8*H3g:"52i;CUp$WKel9
[&TTn#9un+,s!e<R\*M>DbDOr;5]YqSXd9@9e'*8W&6JX<-k68C/%Ws'fr$gHAPM!
/Q"9';Phi%APh\-=AY9'ZV\6H>%GTQXciOeeZ.PI.ofrZL9@f4g;mXeI=%CtcG)cI
nR,k?I',>DJQ<-j?!87mZ'FG[fP:k*Be>1Fp*l&)gBD)QNKCB.$Hh&s#A.fe2RA^8
a]$qCC2C1$[!$396q]UUUXc$FG,j-JGL^MH4hDlgdbd-EEGOk\]"!j-hqM?eE,JU8
\@1t->-!]%/mZ>t2`BtcgS8j=L"!YnB'\7<,Bdrnd^'aUl5Qe=H<hQN]ok;F?.oa6
Y687H[uRKFqsesTp%#kW2Yu>(NI3Dn,dpejq2muF~>
%-EOD-
Q
Q
q
/DeviceGray {} cs
[0] sc
1 j
0.8 w
[] 0 d
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
134.930667 61.4 m
134.930667 57.9 l
f
134.930667 61.4 m
134.930667 57.9 l
S
1 w
[1 0 0 1 0 0] Tm
0 0 Td
127.665042 42.24375 Td
/F15_0 16 Tf
(Ia)
[4.72
0
9.808
0] Tj
0.8 w
216 61.4 m
216 57.9 l
f
216 61.4 m
216 57.9 l
S
1 w
[1 0 0 1 0 0] Tm
0 0 Td
204.164062 42.24375 Td
/F15_0 16 Tf
(Ibc)
[4.72
0
10.16
0
8.8
0] Tj
0.8 w
297.069333 61.4 m
297.069333 57.9 l
f
297.069333 61.4 m
297.069333 57.9 l
S
1 w
[1 0 0 1 0 0] Tm
0 0 Td
292.350583 42.24375 Td
/F15_0 16 Tf
(II)
[4.72
0
4.72
0] Tj
[1 0 0 1 0 0] Tm
0 0 Td
156.210938 22.759375 Td
/F15_0 16 Tf
(Predicted label)
[9.648
0
6.576
0
9.84
0
10.16
0
4.448
0
8.8
0
6.272
0
9.84
0
10.16
0
5.088
0
4.448
0
9.808
0
10.16
0
9.84
0
4.448
0] Tj
0.8 w
94.396 264.073333 m
90.896 264.073333 l
f
94.396 264.073333 m
90.896 264.073333 l
S
1 w
[1 0 0 1 0 0] Tm
0 0 Td
72.86475 257.995208 Td
/F15_0 16 Tf
(Ia)
[4.72
0
9.808
0] Tj
0.8 w
94.396 183.004 m
90.896 183.004 l
f
94.396 183.004 m
90.896 183.004 l
S
1 w
[1 0 0 1 0 0] Tm
0 0 Td
63.724125 176.925875 Td
/F15_0 16 Tf
(Ibc)
[4.72
0
10.16
0
8.8
0] Tj
0.8 w
94.396 101.934667 m
90.896 101.934667 l
f
94.396 101.934667 m
90.896 101.934667 l
S
1 w
[1 0 0 1 0 0] Tm
0 0 Td
77.9585 95.856542 Td
/F15_0 16 Tf
(II)
[4.72
0
4.72
0] Tj
[1 0 0 1 0 0] Tm
0 0 Td
[0 1 -1 0 56.396 142.9415] Tm
0 0 Td
0 0 Td
/F15_0 16 Tf
(True label)
[9.776
0
6.576
0
10.144
0
9.84
0
5.088
0
4.448
0
9.808
0
10.16
0
9.84
0
4.448
0] Tj
2 J
0 j
0.8 w
[] 0 d
/DeviceRGB {} cs
[0 0 0] sc
94.396 61.4 m
94.396 304.608 l
S
337.604 61.4 m
337.604 304.608 l
S
94.396 61.4 m
337.604 61.4 l
S
94.396 304.608 m
337.604 304.608 l
S
0 J
/DeviceGray {} cs
[1] sc
1 j
1 w
[] 0 d
/DeviceGray {} CS
[1] SC
/DeviceGray {} cs
[1] sc
[1 0 0 1 0 0] Tm
0 0 Td
117.102542 268.617083 Td
/F15_0 16 Tf
(1.00)
[10.176
0
5.088
0
10.176
0
10.176
0] Tj
[1 0 0 1 0 0] Tm
0 0 Td
98.118167 250.701458 Td
/F15_0 16 Tf
(\(772774\))
[6.24
0
10.176
0
10.176
0
10.176
0
10.176
0
10.176
0
10.176
0
6.24
0] Tj
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
[1 0 0 1 0 0] Tm
0 0 Td
198.171875 268.617083 Td
/F15_0 16 Tf
(0.00)
[10.176
0
5.088
0
10.176
0
10.176
0] Tj
[1 0 0 1 0 0] Tm
0 0 Td
194.46875 250.701458 Td
/F15_0 16 Tf
(\(100\))
[6.24
0
10.176
0
10.176
0
10.176
0
6.24
0] Tj
[1 0 0 1 0 0] Tm
0 0 Td
279.241208 268.617083 Td
/F15_0 16 Tf
(0.00)
[10.176
0
5.088
0
10.176
0
10.176
0] Tj
[1 0 0 1 0 0] Tm
0 0 Td
270.444333 250.701458 Td
/F15_0 16 Tf
(\(2601\))
[6.24
0
10.176
0
10.176
0
10.176
0
10.176
0
6.24
0] Tj
[1 0 0 1 0 0] Tm
0 0 Td
117.102542 187.54775 Td
/F15_0 16 Tf
(0.20)
[10.176
0
5.088
0
10.176
0
10.176
0] Tj
[1 0 0 1 0 0] Tm
0 0 Td
103.211917 169.632125 Td
/F15_0 16 Tf
(\(17543\))
[6.24
0
10.176
0
10.176
0
10.176
0
10.176
0
10.176
0
6.24
0] Tj
/DeviceGray {} cs
[1] sc
/DeviceGray {} CS
[1] SC
/DeviceGray {} cs
[1] sc
[1 0 0 1 0 0] Tm
0 0 Td
198.171875 187.54775 Td
/F15_0 16 Tf
(0.72)
[10.176
0
5.088
0
10.176
0
10.176
0] Tj
[1 0 0 1 0 0] Tm
0 0 Td
184.28125 169.632125 Td
/F15_0 16 Tf
(\(64757\))
[6.24
0
10.176
0
10.176
0
10.176
0
10.176
0
10.176
0
6.24
0] Tj
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
[1 0 0 1 0 0] Tm
0 0 Td
279.241208 187.54775 Td
/F15_0 16 Tf
(0.08)
[10.176
0
5.088
0
10.176
0
10.176
0] Tj
[1 0 0 1 0 0] Tm
0 0 Td
270.444333 169.632125 Td
/F15_0 16 Tf
(\(7513\))
[6.24
0
10.176
0
10.176
0
10.176
0
10.176
0
6.24
0] Tj
[1 0 0 1 0 0] Tm
0 0 Td
117.102542 106.478417 Td
/F15_0 16 Tf
(0.11)
[10.176
0
5.088
0
10.176
0
10.176
0] Tj
[1 0 0 1 0 0] Tm
0 0 Td
103.211917 88.562792 Td
/F15_0 16 Tf
(\(48387\))
[6.24
0
10.176
0
10.176
0
10.176
0
10.176
0
10.176
0
6.24
0] Tj
[1 0 0 1 0 0] Tm
0 0 Td
198.171875 106.478417 Td
/F15_0 16 Tf
(0.01)
[10.176
0
5.088
0
10.176
0
10.176
0] Tj
[1 0 0 1 0 0] Tm
0 0 Td
189.375 88.562792 Td
/F15_0 16 Tf
(\(2461\))
[6.24
0
10.176
0
10.176
0
10.176
0
10.176
0
6.24
0] Tj
/DeviceGray {} cs
[1] sc
/DeviceGray {} CS
[1] SC
/DeviceGray {} cs
[1] sc
[1 0 0 1 0 0] Tm
0 0 Td
279.241208 106.478417 Td
/F15_0 16 Tf
(0.89)
[10.176
0
5.088
0
10.176
0
10.176
0] Tj
[1 0 0 1 0 0] Tm
0 0 Td
260.256833 88.562792 Td
/F15_0 16 Tf
(\(399938\))
[6.24
0
10.176
0
10.176
0
10.176
0
10.176
0
10.176
0
10.176
0
6.24
0] Tj
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
[1 0 0 1 0 0] Tm
0 0 Td
93.5 329.6455 Td
/F15_0 17 Tf
(Normalized confusion matrix)
[12.716
0
10.404
0
6.987
0
16.558
0
10.421
0
4.726
0
4.726
0
8.925
0
10.455
0
10.795
0
5.406
0
9.35
0
10.404
0
10.778
0
5.984
0
10.778
0
8.857
0
4.726
0
10.404
0
10.778
0
5.406
0
16.558
0
10.421
0
6.664
0
6.987
0
4.726
0
10.064
0] Tj
[1 0 0 1 0 0] Tm
0 0 Td
110.25 310.608 Td
/F15_0 17 Tf
(Case:All, Accuracy:0.940)
[11.866
0
10.421
0
8.857
0
10.455
0
5.729
0
11.628
0
4.726
0
4.726
0
5.406
0
5.406
0
11.628
0
9.35
0
9.35
0
10.778
0
6.987
0
10.421
0
9.35
0
10.064
0
5.729
0
10.812
0
5.406
0
10.812
0
10.812
0
10.812
0] Tj
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font T3_15_0
%%EOF
